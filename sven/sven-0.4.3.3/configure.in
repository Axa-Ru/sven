dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)

PACKAGE=sven
AC_SUBST(PACKAGE)

AM_INIT_AUTOMAKE(sven, 0.4.3.3)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

dnl libsven
LIBSVEN_MAJOR_VERSION=2
LIBSVEN_MINOR_VERSION=0
LIBSVEN_MICRO_VERSION=0
LIBSVEN_VERSION=$LIBSVEN_MAJOR_VERSION.$LIBSVEN_MINOR_VERSION.$LIBSVEN_MICRO_VERSION
AC_SUBST(LIBSVEN_MAJOR_VERSION)
AC_SUBST(LIBSVEN_MINOR_VERSION)
AC_SUBST(LIBSVEN_MICRO_VERSION)

AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_LIBTOOL
AC_PATH_XTRA


if test "${prefix}" == "NONE"; then
	prefix=${ac_default_prefix}
	AC_SUBST(prefix)
fi

AC_ARG_WITH(gnome1-menu, 
	AC_HELP_STRING([--with-gnome1-menu],[enable gnome1 menu, use --with-gnome1-menu=/path to override the gnome1 prefix default /usr/share/gnome/apps]),[
	GNOME1MENU=$withval
	],[
	GNOME1MENU=no]
)
if test "x${GNOME1MENU}" != "xno" ; then
	if test "x$GNOME1MENU" = "xyes" ; then
		echo -n "checking for gnome1 menu directory... "
		if test -d /usr/share/gnome/apps ; then
			GNOME1MENU=/usr/share/gnome/apps
		else
			GNOME1MENU=no
		fi
		echo $GNOME1MENU
	fi
	if test "x${GNOME1MENU}" != "xno" ; then
		INSTALLDATA="$INSTALLDATA install-gnome1-menu"
		AC_SUBST(GNOME1MENU)
	fi
fi


AC_ARG_WITH(freedesktop_org-menu, 
	AC_HELP_STRING([--without-freedesktop_org-menu],[disable freedesktop_org menu, use --with-freedesktop_org-menu=/path to override the default location /usr/share/applications]),[
	FDMENU=$withval
	],[
	FDMENU=yes]
)
if test "${FDMENU}" != "no" ; then
	if test "${FDMENU}" = "yes" ; then
		echo -n "checking freedesktop.org menu directory... "
		if test -d /usr/share/applications ; then
			FDMENU=/usr/share/applications
		else
			if test -d ${prefix}/share/applications ; then
				FDMENU=${prefix}/share/applications
			else
				if test -d /usr/X11R6/share/gnome/applications ; then
					FDMENU=/usr/X11R6/share/gnome/applications
				else
					if test -d ${prefix}/share/gnome/applications ; then
						FDMENU=${prefix}/share/gnome/applications
					else
						FDMENU=no
					fi
				fi
			fi
		fi
		echo $FDMENU
	fi
	if test "${FDMENU}" != "no" ; then
		INSTALLDATA="$INSTALLDATA install-fdmenu"
		AC_SUBST(FDMENU)
		AC_PATH_PROG(UPDATE_DESKTOP, update-desktop-database, "no")
		if test "${UPDATEDATABASES}" != "no" -a "${UPDATE_DESKTOP}" != "no"; then
			INSTALLDATA="$INSTALLDATA install-update-menu"
			AC_SUBST(UPDATE_DESKTOP)
		fi
	fi
fi


AC_ARG_WITH(icon-path,
	AC_HELP_STRING([--without-icon-path],[do not install icon in /usr/share/pixmaps/, use --with-icon-path=/path to override the default path]),[
	ICONPATH=$withval
], [
	ICONPATH=yes
])

if test "x$ICONPATH" != "xno" ; then
	if test "x${ICONPATH}" = "xyes" ; then
		echo -n "checking icon path... "
		# the default answer is yes, so this is for users that did not use theicon-path option at all
		if test -d /usr/share/pixmaps ; then
			ICONPATH=/usr/share/pixmaps
		else
			if test -d ${prefix}/share/pixmaps ; then
				ICONPATH=${prefix}/share/pixmaps
			else
				# FreeBSD defaults to:
				if test -d /usr/X11R6/share/gnome/pixmaps ; then
					ICONPATH=/usr/X11R6/share/gnome/pixmaps
				else
					if test -d ${prefix}/share/gnome/pixmaps ; then
						ICONPATH=${prefix}/share/gnome/pixmaps
					else
						# the user did not specify an icon-path, and the default path seems to be wrong for this system
						# we will not install an icon
						ICONPATH=no
					fi
				fi
			fi
		fi
		echo $ICONPATH
	fi	
	if test "${ICONPATH}" != "no" ; then
		AC_SUBST(ICONPATH)
		INSTALLMAIN="${INSTALLMAIN} install-icon"
		INSTALLDATA="${INSTALLDATA} install-icon"
	fi
fi

pkgdatadir=${datadir}/${PACKAGE}/
AC_SUBST(pkgdatadir)

plugindir=$libdir/sven//plugins
AC_SUBST(plugindir)

localedir='${prefix}/share/locale'
AC_SUBST(localedir)



dnl Checks for libraries.
AC_CHECK_LIB(pthread, pthread_create,,
	     AC_MSG_ERROR([*** POSIX thread support not found ***]))

dnl Check for header files.
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADER(pthread.h,,
		AC_MSG_ERROR([*** POSIX thread support not installed ***]))

dnl Check for GTK/GLib/Pango
pkg_modules="gtk+-2.0 >= 2.0.0"
PKG_CHECK_MODULES(PACKAGE, [$pkg_modules])
AC_SUBST(pkg_modules)
AC_SUBST(PACKAGE_CFLAGS)
AC_SUBST(PACKAGE_LIBS)
AC_CHECK_LIB(pthread, pthread_create,,
	     AC_MSG_ERROR([*** POSIX thread support not found ***]))

AC_PATH_PROG(PCRE_CONFIG, pcre-config, no)
if test "x$PCRE_CONFIG" = "xno" ; then
	AC_MSG_ERROR(pcre-config not found please install libpcre3-dev or similar)
else 
	PACKAGE_LIBS="$PACKAGE_LIBS `$PCRE_CONFIG --libs`"
	PACKAGE_CFLAGS="$PACKAGE_CFLAGS `$PCRE_CONFIG --cflags`"
fi
	     
GETTEXT_PACKAGE=sven
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package.])

dnl Add the languages which your application supports here.
ALL_LINGUAS="ru"
AM_GLIB_GNU_GETTEXT
AC_SUBST(INSTALLDATA)

dnl Produce Output files
AC_CONFIG_FILES([
Makefile
sven.pc
libsven/Makefile
sven/Makefile
po/Makefile.in
data/Makefile
plugins/Makefile
script/Makefile
script/sven-config
])
AC_CONFIG_COMMANDS([default],[[chmod +x script/sven-config]],[[]])
AC_OUTPUT

echo "-------------------------------------------"
echo "-                Configure Ok             -"
echo "-         run make make install           -"
echo "-              And sven :-)               -"
echo "-------------------------------------------"
echo " **************************************************"
echo " *    Copyright (C) 2005 Eugene Morenko(More)     *"
echo " *              mailto: more@irpin.com            *"
echo " *         web: http://sven.linux.kiev.ua/        *"
echo " *                  icq:325697438                 *"
echo " **************************************************"
